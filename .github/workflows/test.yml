name: Test

on:
  push:
    branches:
    - master
  pull_request:
  issue_comment:
    types:
    - created

jobs:
  unit:
    if: (github.event.issue.pull_request != '' && contains(github.event.comment.body, '/test')) || github.event_name == 'pull_request' || github.event_name == 'push'
    strategy:
      matrix:
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        persist-credentials: false
        fetch-depth: 0
    - name: Install Go
      uses: actions/setup-go@v4
      with:
        go-version-file: go.mod
    - name: Test
      run: |
        go test -v -cover ./... -coverprofile coverage.out -coverpkg ./cert/...,./log/...,./pebble/...,./regattaserver/...,./replication/...,./storage/...,./util/...
        go tool cover -func coverage.out -o coverage.out
    - name: Go Coverage Badge
      uses: tj-actions/coverage-badge-go@v2
      if: ${{ github.actor != 'dependabot[bot]' && runner.os == 'Linux' && github.event_name == 'pull_request' }}
      with:
        green: 80
        filename: coverage.out
    - name: Verify Changed files
      uses: tj-actions/verify-changed-files@v14
      id: verify-changed-files
      with:
        files: README.md
    - name: Commit changes
      if: steps.verify-changed-files.outputs.files_changed == 'true'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add README.md
        git commit -m "chore: Updated coverage badge."
    - name: Push changes
      if: steps.verify-changed-files.outputs.files_changed == 'true'
      uses: ad-m/github-push-action@v0.6.0
      with:
        github_token: ${{ github.token }}
        branch: ${{ github.head_ref }}
  build:
    if: (github.event.issue.pull_request != '' && contains(github.event.comment.body, '/test')) || github.event_name == 'pull_request' || github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Docker build
      uses: docker/build-push-action@v3
      with:
        context: .
        cache-from: type=gha
        cache-to: type=gha,mode=max
        build-args: |
          VERSION=${{ github.ref_name }}
  vulncheck:
    if: github.actor != 'dependabot[bot]' && ((github.event.issue.pull_request != '' && contains(github.event.comment.body, '/test')) || github.event_name == 'pull_request' || github.event_name == 'push')
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Install Go
      uses: actions/setup-go@v4
      id: go-version
      with:
        cache: false
        go-version-file: go.mod
    - name: Scan for Vulnerabilities in Code
      uses: wandera/govulncheck-action@v0.0.10
      with:
        go-version: ${{ steps.go-version.outputs.go-version }}
        package: ./...
